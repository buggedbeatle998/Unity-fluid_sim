// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Sphere {
    float3 pos;
    float rad;
}

struct Constants {
    uint2 res;
    uint num_spheres
}

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
ConstantBuffer<uint> constants;

RWStructuredBuffer<Sphere> spheres;
float2 angle;

RWTexture2D<float4> Result;

[numthreads(256,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    
    for (uint i = 0; i < num_spheres; i++) {

    }
    Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
